    /*
       *getBondedDevices()获取已经匹配的设备列表，并以set集合的方式返回
       *获取已经配对的设备
  * */
    private void setPairingDevice() {
        Set<BluetoothDevice> devices=mBtAdapter.getBondedDevices();
        if(devices.size()>0){ //存在已配对过的设备
            //利用for循环读取每一个设备的信息
            for(Iterator<BluetoothDevice> it = devices.iterator(); it.hasNext();){
                BluetoothDevice btd=it.next();

            }
        }else{
            //不存在已经配对的蓝牙设备
        }
    }
    // 创建一个接收ACTION_FOUND广播的BroadcastReceiver
    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {

        public void onReceive(Context context, Intent intent) {

            String action = intent.getAction();

            // 发现设备
            if (BluetoothDevice.ACTION_FOUND.equals(action)) {

                // 从Intent中获取设备对象
                BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);

                // 将设备名称和地址放入array adapter，以便在ListView中显示
                mArrayAdapter.add(device.getName() + "\n" + device.getAddress());
            }
        }
    };

    // 注册BroadcastReceiver
    IntentFilter filter = new IntentFilter(BluetoothDevice.ACTION_FOUND);

    registerReceiver(mReceiver, filter); // 不要忘了之后解除绑定